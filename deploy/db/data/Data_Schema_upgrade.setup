insert INTO emf.note_types VALUES (DEFAULT, 'Reference');
-- 12/5/2006
-- Use this to upgrade your schema for export logging
-- 1. Back up your emf.dataset_access_logs table [with options INSERT commands, plain and data only]
-- 2. DROP TABLE emf.dataset_access_logs
-- 3. Create the table as shown below
-- 4. Restore the data from the backup
-- 5. Test to be sure that you can export and that you can view the old and new logs
CREATE TABLE emf.dataset_access_logs
(
  id SERIAL PRIMARY KEY,
  dataset_id int4 REFERENCES emf.datasets (id) NOT NULL,
  lines_exported int8 DEFAULT 0,
  username varchar(255) REFERENCES emf.users (username) NOT NULL,
  dataset_name varchar(255),
  date timestamp NOT NULL,
  start_date timestamp,
  end_date timestamp,
  time_reqrd real DEFAULT 0,
  version varchar(255) NOT NULL,
  description text NOT NULL,
  "location" varchar(255) NOT NULL,
  details text
) 
WITHOUT OIDS;

-- 12/22/2006
-- addition of table per dataset to dataset_types table
ALTER TABLE dataset_types ADD COLUMN table_per_dataset int4 NOT NULL DEFAULT 1;

-- Also, need to remove the table column data from tables
-- Also, need to lock timeout property to 2 hours

-- 3/26/2007
-- added new default QA step to run during a control strategy run
update emf.properties
set value = value || '|Summarize by US State and Pollutant'
where name = 'defaultQASummaries'



-- 7/31/2007 
-- update control strategy dataset types to use new qa engine format...
-- Summarize by Pollutant - ORL Types
update emf.dataset_types_qa_step_templates 
set program_arguments = 'select POLL, sum(ann_emis) as ann_emis from $TABLE[1] e group by POLL order by POLL'
where name = 'Summarize by Pollutant'
	and dataset_type_id in (
		select id
		from emf.dataset_types
		where name in ('ORL Nonpoint Inventory (ARINV)','ORL Nonroad Inventory (ARINV)','ORL Onroad Inventory (MBINV)','ORL Point Inventory (PTINV)')
	);

-- Summarize by Pollutant - Control Strategy Detailed Result
update emf.dataset_types_qa_step_templates 
set program_arguments = 'select POLL, avg(Ann_Cost_per_Ton) as avg_cost_per_ton, sum(Annual_Cost) as Annual_Cost, sum(Final_emissions) as Final_emissions, sum(Emis_Reduction) as Emis_Reduction, sum(Inv_emissions) as Inv_emissions from $TABLE[1] e group by POLL order by POLL'
where name = 'Summarize by Pollutant'
	and dataset_type_id in (
		select id
		from emf.dataset_types
		where name in ('Control Strategy Detailed Result')
	);


-- Summarize by SCC and Pollutant - ORL Types
update emf.dataset_types_qa_step_templates 
set program_arguments = 'select SCC, POLL, sum(ann_emis) as ann_emis from $TABLE[1] e group by SCC, POLL order by SCC, POLL'
where name = 'Summarize by SCC and Pollutant'
	and dataset_type_id in (
		select id
		from emf.dataset_types
		where name in ('ORL Nonpoint Inventory (ARINV)','ORL Nonroad Inventory (ARINV)','ORL Onroad Inventory (MBINV)','ORL Point Inventory (PTINV)')
	);

-- Summarize by SCC and Pollutant - Control Strategy Detailed Result
update emf.dataset_types_qa_step_templates 
set program_arguments = 'select SCC, POLL, avg(Ann_Cost_per_Ton) as avg_cost_per_ton, sum(Annual_Cost) as Annual_Cost, sum(Final_emissions) as Final_emissions, sum(Emis_Reduction) as Emis_Reduction, sum(Inv_emissions) as Inv_emissions from $TABLE[1] e group by SCC, POLL order by SCC, POLL'
where name = 'Summarize by SCC and Pollutant' 
	and dataset_type_id in (
		select id
		from emf.dataset_types
		where name in ('Control Strategy Detailed Result')
	);


-- Summarize by County and Pollutant - ORL Types
update emf.dataset_types_qa_step_templates 
set program_arguments = 'select FIPS, POLL, sum(ann_emis) as ann_emis from $TABLE[1] e group by FIPS, POLL order by FIPS, POLL'
where name = 'Summarize by County and Pollutant'
	and dataset_type_id in (
		select id
		from emf.dataset_types
		where name in ('ORL Nonpoint Inventory (ARINV)','ORL Nonroad Inventory (ARINV)','ORL Onroad Inventory (MBINV)','ORL Point Inventory (PTINV)')
	);

-- Summarize by SCC and Pollutant - Control Strategy Detailed Result
update emf.dataset_types_qa_step_templates 
set program_arguments = 'select FIPS, POLL, avg(Ann_Cost_per_Ton) as avg_cost_per_ton, sum(Annual_Cost) as Annual_Cost, sum(Final_emissions) as Final_emissions, sum(Emis_Reduction) as Emis_Reduction, sum(Inv_emissions) as Inv_emissions from $TABLE[1] e group by FIPS, POLL order by FIPS, POLL'
where name = 'Summarize by County and Pollutant' 
	and dataset_type_id in (
		select id
		from emf.dataset_types
		where name in ('Control Strategy Detailed Result')
	);


-- Summarize by US State and Pollutant - ORL Types
update emf.dataset_types_qa_step_templates 
set program_arguments = 'select fips.state_name, fips.state_abbr, fips.fipsst, e.POLL, sum(ann_emis) as ann_emis from $TABLE[1] e inner join reference.fips on fips.state_county_fips = e.FIPS where fips.country_num = ''0'' group by fips.state_name, fips.state_abbr, fips.fipsst, POLL order by fips.state_name, POLL'
where name = 'Summarize by US State and Pollutant'
	and dataset_type_id in (
		select id
		from emf.dataset_types
		where name in ('ORL Nonpoint Inventory (ARINV)','ORL Nonroad Inventory (ARINV)','ORL Onroad Inventory (MBINV)','ORL Point Inventory (PTINV)')
	);

-- Summarize by US State and Pollutant - Control Strategy Detailed Result
update emf.dataset_types_qa_step_templates 
set program_arguments = 'select fips.state_name, fips.state_abbr, fips.fipsst, e.POLL, avg(e.Ann_Cost_per_Ton) as avg_cost_per_ton, sum(e.Annual_Cost) as Annual_Cost, sum(e.Final_emissions) as Final_emissions, sum(e.Emis_Reduction) as Emis_Reduction, sum(e.Inv_emissions) as Inv_emissions from $TABLE[1] e inner join reference.fips on fips.state_county_fips = e.FIPS where fips.country_num = ''0'' group by fips.state_name, fips.state_abbr, fips.fipsst, POLL order by fips.state_name, POLL'
where name = 'Summarize by US State and Pollutant' 
	and dataset_type_id in (
		select id
		from emf.dataset_types
		where name in ('Control Strategy Detailed Result')
	);


-- Summarize by Control Measure and Pollutant - Control Strategy Detailed Result
update emf.dataset_types_qa_step_templates 
set program_arguments = 'select cm.name as Measure_Name, cm.abbreviation as Measure_Abbreviation, sg.name as Source_Group, ct.name as Control_Technology, e.POLL, avg(e.Ann_Cost_per_Ton) as avg_cost_per_ton, sum(e.Annual_Cost) as Annual_Cost, sum(e.Final_emissions) as Final_emissions, sum(e.Emis_Reduction) as Emis_Reduction, sum(e.Inv_emissions) as Inv_emissions from $TABLE[1] e inner join emf.control_measures cm on cm.id = e.cm_id left outer join emf.source_groups sg on sg.id = cm.source_group left outer join emf.control_technologies ct on ct.id = cm.control_technology group by cm.name, cm.abbreviation, sg.name, ct.name, e.POLL order by cm.name, POLL'
where name = 'Summarize by Control Measure and Pollutant' 
	and dataset_type_id in (
		select id
		from emf.dataset_types
		where name in ('Control Strategy Detailed Result')
	);


-- Summarize by Source Group and Pollutant - Control Strategy Detailed Result
update emf.dataset_types_qa_step_templates 
set program_arguments = 'select sg.name as Source_Group, e.POLL, avg(e.Ann_Cost_per_Ton) as avg_cost_per_ton, sum(e.Annual_Cost) as Annual_Cost, sum(e.Final_emissions) as Final_emissions, sum(e.Emis_Reduction) as Emis_Reduction, sum(e.Inv_emissions) as Inv_emissions from $TABLE[1] e inner join emf.control_measures cm on cm.id = e.cm_id inner join emf.source_groups sg on sg.id = cm.source_group group by sg.name, e.POLL order by sg.name, POLL'
where name = 'Summarize by Source Group and Pollutant' 
	and dataset_type_id in (
		select id
		from emf.dataset_types
		where name in ('Control Strategy Detailed Result')
	);


-- Summarize by Control Technology and Pollutant - Control Strategy Detailed Result
update emf.dataset_types_qa_step_templates 
set program_arguments = 'select ct.name as Control_Technology, e.POLL, avg(e.Ann_Cost_per_Ton) as avg_cost_per_ton, sum(e.Annual_Cost) as Annual_Cost, sum(e.Final_emissions) as Final_emissions, sum(e.Emis_Reduction) as Emis_Reduction, sum(e.Inv_emissions) as Inv_emissions from $TABLE[1] e inner join emf.control_measures cm on cm.id = e.cm_id inner join emf.control_technologies ct on ct.id = cm.control_technology group by ct.name, e.POLL order by ct.name, POLL'
where name = 'Summarize by Control Technology and Pollutant' 
	and dataset_type_id in (
		select id
		from emf.dataset_types
		where name in ('Control Strategy Detailed Result')
	);
	
-- To add exporter class name for external dataset types
update emf.dataset_types set exporter_classname='gov.epa.emissions.commons.io.external.ExternalFilesExporter' 
where external='TRUE';

