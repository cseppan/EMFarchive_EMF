-- TODO: we need to set all line based dataset types to have a default sort order of LINE_NUMBER
-- TODO: we need to set all CSV based dataset types to set keywords EXPORT_INLINE_COMMENTS to false and
--       export_suffix to .csv
-- emf.users
insert into emf.users values(DEFAULT,'admin', '1Ojm3qp7H4OB4J4+a4PjbwtoHFw=', 'EMF Administrator', 'UNC', '919-843-8593', 'admin@emf.cep.unc.edu', TRUE, FALSE);
insert into emf.users values(DEFAULT,'emf', '7Dq/pgn1VOcABL644L59KlfI/eo=', 'EMF User', 'UNC', '919-843-8593', 'emf@emf.cep.unc.edu', FALSE, FALSE);
-- emf.users
-- emf.countries
insert into emf.countries values (DEFAULT, 'Canada');
insert into emf.countries values (DEFAULT, 'Mexico');
insert into emf.countries values (DEFAULT, 'US');
-- emf.countries

--emf.sectors
--emf.sectors

--emf.properties
insert into emf.properties values(DEFAULT, 'lock.time-interval', '7200000');
insert into emf.properties values(DEFAULT, 'page-size', '300');
insert into emf.properties values(DEFAULT, 'batch-size', '10000');
insert into emf.properties values(DEFAULT, 'export-batch-size', '150000');
insert into emf.properties values(DEFAULT, 'defaultQASummaries', 'Summarize by Pollutant|Summarize by SCC and Pollutant|Summarize by County and Pollutant|Summarize by U.S. State and Pollutant');
insert into emf.properties values(DEFAULT, 'PM10-PRI-alias', 'PM10');
insert into emf.properties values(DEFAULT, 'PM2_5-PRI-alias', 'PM2_5');
insert into emf.properties values(DEFAULT, 'ImportExportTempDir', '');
insert into emf.properties values(DEFAULT, 'NUMBER_OF_SIMULT_EXPORTS', '2');
insert into emf.properties values(DEFAULT, 'SECONDS_TO_WAIT_AFTER_EXPORT', '2');
insert into emf.properties values(DEFAULT, 'DO_NOT_EXPORT_JOBS', 'true');
insert into emf.properties values(DEFAULT, 'USE_IMPORT_TASK_MANAGER', 'false');
insert into emf.properties values(DEFAULT, 'MASS_STORAGE_ROOT', '/asm');
--update version each time EMF gets updated!
insert into emf.properties values(DEFAULT, 'EMF-version', 'v1.9 - 1/31/2008');
insert into emf.properties values(DEFAULT, 'strategy-pool-size', '2');
insert into emf.properties values(DEFAULT, 'postgres-db', 'EMF');
insert into emf.properties values(DEFAULT, 'postgres-user', 'emf');
insert into emf.properties values(DEFAULT, 'postgres-bin-dir', '/usr/local/PostgreSQL/8.3/bin');
-NOTE THIS stores the postgres password, the name is different to hide its true purpose...
insert into emf.properties values(DEFAULT, 'pgsql2shp-info', 'emf');
INSERT into emf.properties values(DEFAULT, 'CANCEL_JOB_COMMAND_AMBER', 'qdel');
INSERT into emf.properties values(DEFAULT, 'CANCEL_JOB_COMMAND_GARNET01', 'qdel');
--emf.properties

-- DO NOT CHANGE THE ORDER OF THE DATASET TYPE
-- emf.dataset_types
insert into emf.dataset_types values(DEFAULT,'ORL Nonpoint Inventory (ARINV)','ORL Nonpoint Inventory (ARINV)', '1', '1', false,'', 'gov.epa.emissions.commons.io.orl.ORLNonPointImporter', 'gov.epa.emissions.commons.io.orl.ORLNonPointExporter');
insert into emf.dataset_types values(DEFAULT,'ORL Nonroad Inventory (ARINV)','ORL Nonroad Inventory (ARINV)', '1', '1', false,'', 'gov.epa.emissions.commons.io.orl.ORLNonRoadImporter', 'gov.epa.emissions.commons.io.orl.ORLNonRoadExporter');
insert into emf.dataset_types values(DEFAULT,'ORL Onroad Inventory (MBINV)','ORL Onroad Inventory (MBINV)', '1', '1', false,'', 'gov.epa.emissions.commons.io.orl.ORLOnRoadImporter', 'gov.epa.emissions.commons.io.orl.ORLOnRoadExporter');
insert into emf.dataset_types values(DEFAULT,'ORL Point Inventory (PTINV)','ORL Point Inventory (PTINV)', '1', '1', false,'', 'gov.epa.emissions.commons.io.orl.ORLPointImporter', 'gov.epa.emissions.commons.io.orl.ORLPointExporter');
insert into emf.dataset_types values(DEFAULT,'Shapefile (External)','Shapefile (External)', '3', '-1', true,'', 'gov.epa.emissions.commons.io.external.ShapeFilesImporter', 'gov.epa.emissions.commons.io.external.ExternalFilesExporter');
insert into emf.dataset_types values(DEFAULT,'External File (External)','External File (External)', '1', '-1', true,'', 'gov.epa.emissions.commons.io.external.ExternalFilesImporter', 'gov.epa.emissions.commons.io.external.ExternalFilesExporter');
insert into emf.dataset_types values(DEFAULT,'Meteorology File (External)','Meteorology File (External)', '1', '-1', true,'', 'gov.epa.emissions.commons.io.external.MeteorologyFilesImporter', 'gov.epa.emissions.commons.io.external.ExternalFilesExporter');
insert into emf.dataset_types values(DEFAULT,'Model Ready Emissions File (External)','Model Ready Emissions (External)', '1', '-1',true,'', 'gov.epa.emissions.commons.io.external.ModelReadyEmissionsFilesImporter', 'gov.epa.emissions.commons.io.external.ExternalFilesExporter');
insert into emf.dataset_types values(DEFAULT,'Temporal Cross Reference (A/M/PTREF)','Temporal Cross Reference (A/M/PTREF)', '1', '1',false,'', 'gov.epa.emissions.commons.io.temporal.TemporalReferenceImporter', 'gov.epa.emissions.commons.io.temporal.TemporalReferenceExporter');
insert into emf.dataset_types values(DEFAULT,'Temporal Profile (A/M/PTPRO)','Temporal Profile (A/M/PTPRO)', '1', '1',false,'', 'gov.epa.emissions.commons.io.temporal.TemporalProfileImporter', 'gov.epa.emissions.commons.io.temporal.TemporalProfileExporter', '', null, 4);
insert into emf.dataset_types values(DEFAULT,'Comma Separated Values (CSV)','Comma Separated Values (CSV)', '1', '1', false,'', 'gov.epa.emissions.commons.io.csv.CSVImporter', 'gov.epa.emissions.commons.io.csv.CSVExporter', '', null, 0);
insert into emf.dataset_types values(DEFAULT,'Text file (Line-based)','Text file (Line-based)', '1', '1', false,'LINE_NUMBER', 'gov.epa.emissions.commons.io.generic.LineImporter', 'gov.epa.emissions.commons.io.generic.LineExporter');
insert into emf.dataset_types values(DEFAULT,'CEM Hour-Specific Point Inventory (PTHOUR)','CEM Hour-Specific Point Inventory (PTHOUR)', '1', '1', false,'', 'gov.epa.emissions.commons.io.other.CEMHourSpecInventoryImporter', 'gov.epa.emissions.commons.io.other.CEMHourSpecInventoryExporter');
insert into emf.dataset_types values(DEFAULT,'Country, state, and county names and data (COSTCY)','Country, state, and county names and data (COSTCY)', '1', '1', false,'', 'gov.epa.emissions.commons.io.other.CountryStateCountyDataImporter', 'gov.epa.emissions.commons.io.other.CountryStateCountyDataExporter', '', null, 3);
insert into emf.dataset_types values(DEFAULT,'Day-Specific Point Inventory (PTDAY)','Day-Specific Point Inventory (PTDAY)', '1', '1', false,'', 'gov.epa.emissions.commons.io.other.DaySpecPointInventoryImporter', 'gov.epa.emissions.commons.io.other.DaySpecPointInventoryExporter');
insert into emf.dataset_types values(DEFAULT,'Inventory Table Data (INVTABLE)','Inventory Table Data (INVTABLE)', '1', '1', false,'', 'gov.epa.emissions.commons.io.other.InventoryTableImporter', 'gov.epa.emissions.commons.io.other.InventoryTableExporter');
insert into emf.dataset_types values(DEFAULT,'Point-Source Stack Replacements (PSTK)','Point-Source Stack Replacements (PSTK)', '1', '1', false,'', 'gov.epa.emissions.commons.io.other.PointStackReplacementsImporter', 'gov.epa.emissions.commons.io.other.PointStackReplacementsExporter');
insert into emf.dataset_types values(DEFAULT,'SMOKE Report','SMOKE Report', '1', '1', false,'', 'gov.epa.emissions.commons.io.other.SMKReportImporter', 'gov.epa.emissions.commons.io.other.SMKReportExporter', '', null, 0);
insert into emf.dataset_types values(DEFAULT,'Surrogate Descriptions (SRGDESC)','Surrogate Descriptions (SRGDESC)', '1', '1', false,'', 'gov.epa.emissions.commons.io.other.SurrogatesDescriptionImporter', 'gov.epa.emissions.commons.io.other.SurrogatesDescriptionExporter');
insert into emf.dataset_types values(DEFAULT,'Gridding Cross Reference (A/MGREF)','Gridding Cross Reference (A/MGREF)', '1', '1', false,'', 'gov.epa.emissions.commons.io.spatial.GridCrossReferenceImporter', 'gov.epa.emissions.commons.io.spatial.GridCrossReferenceExporter');
insert into emf.dataset_types values(DEFAULT,'Spatial Surrogates (A/MGPRO)','Spatial Surrogates (A/MGPRO)', '1', '1', false,'', 'gov.epa.emissions.commons.io.spatial.SpatialSurrogatesImporter', 'gov.epa.emissions.commons.io.spatial.SpatialSurrogatesExporter');
insert into emf.dataset_types values(DEFAULT,'Chemical Speciation Cross-Reference (GSREF)','Chemical Speciation Cross-Reference (GSREF)', '1', '1', false,'', 'gov.epa.emissions.commons.io.speciation.SpeciationCrossReferenceImporter', 'gov.epa.emissions.commons.io.speciation.SpeciationCrossReferenceExporter');
insert into emf.dataset_types values(DEFAULT,'Chemical Speciation Profiles (GSPRO)','Chemical Speciation Profiles (GSPRO)', '1', '1', false,'', 'gov.epa.emissions.commons.io.speciation.SpeciationProfileImporter', 'gov.epa.emissions.commons.io.speciation.SpeciationProfileExporter');
insert into emf.dataset_types values(DEFAULT,'Chemical Speciation Combo Profiles (GSPRO_COMBO)','Chemical Speciation Combo Profiles (GSPRO_COMBO)', '1', '1', false,'', 'gov.epa.emissions.commons.io.speciation.SpeciationComboProfileImporter', 'gov.epa.emissions.commons.io.speciation.SpeciationComboProfileExporter');
insert into emf.dataset_types values(DEFAULT,'NIF3.0 Point Inventory','NIF3.0 Point Inventory', '6', '7', false,'', 'gov.epa.emissions.commons.io.nif.point.NIFPointImporter', '');
insert into emf.dataset_types values(DEFAULT,'NIF3.0 Onroad Inventory','NIF3.0 Onroad Inventory', '2', '3', false,'', 'gov.epa.emissions.commons.io.nif.onroad.NIFOnRoadImporter', '');
insert into emf.dataset_types values(DEFAULT,'NIF3.0 Nonpoint Inventory','NIF3.0 Nonpoint Inventory', '2', '4', false,'', 'gov.epa.emissions.commons.io.nif.nonpointNonroad.NIFNonPointImporter', '');
insert into emf.dataset_types values(DEFAULT,'NIF3.0 Nonroad Inventory','NIF3.0 Nonroad Inventory', '2', '4', false,'', 'gov.epa.emissions.commons.io.nif.nonpointNonroad.NIFNonRoadImporter', '');
insert into emf.dataset_types values(DEFAULT,'IDA Mobile','IDA Mobile', '1', '1', false,'', 'gov.epa.emissions.commons.io.ida.IDAMobileImporter', 'gov.epa.emissions.commons.io.ida.IDAMobileExporter');
insert into emf.dataset_types values(DEFAULT,'IDA Nonpoint/Nonroad','IDA Nonpoint/Nonroad', '1', '1', false,'', 'gov.epa.emissions.commons.io.ida.IDANonPointNonRoadImporter', 'gov.epa.emissions.commons.io.ida.IDANonPointNonRoadExporter');
insert into emf.dataset_types values(DEFAULT,'IDA Point','IDA Point', '1', '1', false,'', 'gov.epa.emissions.commons.io.ida.IDAPointImporter', 'gov.epa.emissions.commons.io.ida.IDAPointExporter');
insert into emf.dataset_types values(DEFAULT,'IDA Activity','IDA Activity', '1', '1', false,'', 'gov.epa.emissions.commons.io.ida.IDAActivityImporter', 'gov.epa.emissions.commons.io.ida.IDAActivityExporter');
insert into emf.dataset_types values(DEFAULT,'Shapefile Catalog (CSV)','Shapefile Catalog (CSV)','1', '1', false,'', 'gov.epa.emissions.commons.io.csv.CSVImporter', 'gov.epa.emissions.commons.io.csv.CSVExporter', '', null, 0);
insert into emf.dataset_types values(DEFAULT,'Surrogate Tool Control Variables (CSV)','Surrogate Tool Control Variables (CSV)','1', '1', false,'', 'gov.epa.emissions.commons.io.csv.CSVImporter', 'gov.epa.emissions.commons.io.csv.CSVExporter', '', null, 0);
insert into emf.dataset_types values(DEFAULT,'Surrogate Specifications (CSV)','Surrogate Specifications (CSV)','1', '1', false,'', 'gov.epa.emissions.commons.io.csv.CSVImporter', 'gov.epa.emissions.commons.io.csv.CSVExporter', '', null, 0);
insert into emf.dataset_types values(DEFAULT,'Surrogate Tool Generation Controls (CSV)','Surrogate Tool Generation Controls (CSV)','1', '1', false,'', 'gov.epa.emissions.commons.io.csv.CSVImporter', 'gov.epa.emissions.commons.io.csv.CSVExporter', '', null, 0);
insert into emf.dataset_types values(DEFAULT,'Surrogate Code Mapping (CSV)','Surrogate Code Mapping (CSV)','1', '1', false,'', 'gov.epa.emissions.commons.io.csv.CSVImporter', 'gov.epa.emissions.commons.io.csv.CSVExporter', '', null, 0);
insert into emf.dataset_types values(DEFAULT,'Area-to-point Conversions (Line-based)','Area-to-point Conversions (Line-based)', '1', '1', false,'LINE_NUMBER', 'gov.epa.emissions.commons.io.generic.LineImporter', 'gov.epa.emissions.commons.io.generic.LineExporter');
insert into emf.dataset_types values(DEFAULT,'Grid Descriptions (Line-based)','Grid Descriptions (Line-based)', '1', '1', false,'LINE_NUMBER', 'gov.epa.emissions.commons.io.generic.LineImporter', 'gov.epa.emissions.commons.io.generic.LineExporter');
insert into emf.dataset_types values(DEFAULT,'Report Configurations (Line-based)','Report Configurations (Line-based)', '1', '1', false,'LINE_NUMBER', 'gov.epa.emissions.commons.io.generic.LineImporter', 'gov.epa.emissions.commons.io.generic.LineExporter');
insert into emf.dataset_types values(DEFAULT,'Growth and Controls Configurations (Line-based)','Growth and Controls Configurations (Line-based)', '1', '1', false,'LINE_NUMBER', 'gov.epa.emissions.commons.io.generic.LineImporter', 'gov.epa.emissions.commons.io.generic.LineExporter');
insert into emf.dataset_types values(DEFAULT,'Holiday Identifications (Line-based)','Holiday Identifications (Line-based)', '1', '1', false,'LINE_NUMBER', 'gov.epa.emissions.commons.io.generic.LineImporter', 'gov.epa.emissions.commons.io.generic.LineExporter');
insert into emf.dataset_types values(DEFAULT,'BEIS3 Emission Factors (Line-based)','BEIS3 Emission Factors (Line-based)', '1', '1', false,'LINE_NUMBER', 'gov.epa.emissions.commons.io.generic.LineImporter', 'gov.epa.emissions.commons.io.generic.LineExporter');
insert into emf.dataset_types values(DEFAULT,'Mobile Source Codes (Line-based)','Mobile Source Codes (Line-based)', '1', '1', false,'LINE_NUMBER', 'gov.epa.emissions.commons.io.generic.LineImporter', 'gov.epa.emissions.commons.io.generic.LineExporter');
insert into emf.dataset_types values(DEFAULT,'NonHAP VOC Calculation Exclusions (Line-based)','NonHAP VOC Calculation Exclusions (Line-based)', '1', '1', false,'LINE_NUMBER', 'gov.epa.emissions.commons.io.generic.LineImporter', 'gov.epa.emissions.commons.io.generic.LineExporter');
insert into emf.dataset_types values(DEFAULT,'SIC Descriptions (Line-based)','SIC Descriptions (Line-based)', '1', '1', false,'LINE_NUMBER', 'gov.epa.emissions.commons.io.generic.LineImporter', 'gov.epa.emissions.commons.io.generic.LineExporter');
insert into emf.dataset_types values(DEFAULT,'SCC Descriptions (Line-based)','SCC Descriptions (Line-based)', '1', '1', false,'LINE_NUMBER', 'gov.epa.emissions.commons.io.generic.LineImporter', 'gov.epa.emissions.commons.io.generic.LineExporter');
insert into emf.dataset_types values(DEFAULT,'Smkreport county-moncode annual','Smkreport county-moncode annual', '1', '1', false,'', 'gov.epa.emissions.commons.io.other.SMKReportImporter', 'gov.epa.emissions.commons.io.other.SMKReportExporter', '', null, 0);
insert into emf.dataset_types values(DEFAULT,'Control Strategy Detailed Result','Control Strategy Detailed Result', '1', '1', false,'', '', 'gov.epa.emissions.commons.io.csv.CSVExporter', '', null, 0);
insert into emf.dataset_types values(DEFAULT,'Pollutant to Pollutant Conversion (GSCNV)','Pollutant to Pollutant Conversion (GSCNV)', '1', '1', false,'', 'gov.epa.emissions.commons.io.other.GSCNVImporter', 'gov.epa.emissions.commons.io.other.GSCNVExporter');
insert into emf.dataset_types values(DEFAULT,'ORL Fires Inventory (PTINV)','ORL Fire Inventory (PTINV)', '1', '1', false,'', 'gov.epa.emissions.commons.io.orl.ORLFiresInvImporter', 'gov.epa.emissions.commons.io.orl.ORLFiresInvExporter');
insert into emf.dataset_types values(DEFAULT,'ORL Day-Specific Fires Inventory (PTDAY)','ORL Day-Specific Fires Inventory (PTDAY)', '1', '1', false,'', 'gov.epa.emissions.commons.io.orl.ORLDaySpecFiresImporter', 'gov.epa.emissions.commons.io.orl.ORLDaySpecFiresExporter');
insert into emf.dataset_types values(DEFAULT,'Strategy Measure Summary','Strategy Measure Summary', '1', '1', false,'', '', 'gov.epa.emissions.commons.io.csv.CSVExporter', '', null, 0);
insert into emf.dataset_types values(DEFAULT,'List of Counties (CSV)','List of Counties (CSV)', '1', '1', false,'', 'gov.epa.emissions.commons.io.csv.CSVImporter', 'gov.epa.emissions.commons.io.csv.CSVExporter', '', null, 0);
insert into emf.dataset_types values(DEFAULT,'Control Strategy Least Cost Control Measure Worksheet','Control Strategy Least Cost Control Measure Worksheet', '1', '1', false,'', '', 'gov.epa.emissions.commons.io.csv.CSVExporter', '', null, 0);
insert into emf.dataset_types values(DEFAULT,'Control Strategy Least Cost Curve Summary','Control Strategy Least Cost Curve Summary', '1', '1', false,'', '', 'gov.epa.emissions.commons.io.csv.CSVExporter', '', null, 0);
insert into emf.dataset_types values(DEFAULT,'Plant Closure (CSV)','Plant Closure (CSV)', '1', '1', false,'', 'gov.epa.emissions.commons.io.csv.CSVImporter', 'gov.epa.emissions.commons.io.csv.CSVExporter', '', null, 0);
insert into emf.dataset_types values(DEFAULT,'Strategy Messages (CSV)','Strategy Messages (CSV)', '1', '1', false,'', '', 'gov.epa.emissions.commons.io.other.StrategyMessagesExporter');
insert into emf.dataset_types values(DEFAULT,'Projection Packet','Projection Packet', '1', '1', false,'', 'gov.epa.emissions.commons.io.other.ProjectionPacketImporter', 'gov.epa.emissions.commons.io.other.ProjectionPacketExporter');
insert into emf.dataset_types values(DEFAULT,'Control Packet','Control Packet', '1', '1', false,'', 'gov.epa.emissions.commons.io.other.ControlPacketImporter', 'gov.epa.emissions.commons.io.other.ControlPacketExporter');
insert into emf.dataset_types values(DEFAULT,'Strategy County Summary','Strategy County Summary', '1', '1', false,'', 'gov.epa.emissions.commons.io.csv.CSVImporter', 'gov.epa.emissions.commons.io.csv.CSVExporter', '', null, 0);
insert into emf.dataset_types values(DEFAULT,'RSM Percent Reduction','RSM Percent Reduction', '1', '1', false,'', 'gov.epa.emissions.commons.io.csv.CSVImporter', 'gov.epa.emissions.commons.io.csv.CSVExporter', '', null, 0);
insert into emf.dataset_types values(DEFAULT,'Strategy Impact Summary','Strategy Impact Summary', '1', '1', false,'', 'gov.epa.emissions.commons.io.csv.CSVImporter', 'gov.epa.emissions.commons.io.csv.CSVExporter', '', null, 0);
insert into emf.dataset_types values(DEFAULT,'Allowable Packet','Allowable Packet', '1', '1', false,'', 'gov.epa.emissions.commons.io.other.AllowablePacketImporter', 'gov.epa.emissions.commons.io.other.AllowablePacketExporter');
insert into emf.dataset_types values(DEFAULT,'Smkmerge report state annual summary (CSV)','Smkmerge report state annual summary (CSV)','1', '1', false,'', 'gov.epa.emissions.commons.io.csv.CSVImporter', 'gov.epa.emissions.commons.io.csv.CSVExporter', '', null, 0);
insert into emf.dataset_types values(DEFAULT,'ORL Merged Inventory','ORL Merged Inventory', '1', '1', false,'', 'gov.epa.emissions.commons.io.orl.ORLMergedImporter', 'gov.epa.emissions.commons.io.orl.ORLMergedExporter');
insert into emf.dataset_types values(DEFAULT,'State Comparison Tolerance (CSV)','State Comparison Tolerance (CSV)', '1', '1', false,'', 'gov.epa.emissions.commons.io.csv.CSVImporter', 'gov.epa.emissions.commons.io.csv.CSVExporter');
-- emf.dataset_types
--
-- emf.intended_uses
insert into emf.intended_uses values (DEFAULT, 'public');
insert into emf.intended_uses values (DEFAULT, 'public read-only');
insert into emf.intended_uses values (DEFAULT, 'group read+write');
insert into emf.intended_uses values (DEFAULT, 'group read-only');
insert into emf.intended_uses values (DEFAULT, 'private');
-- emf.intended_uses
--
-- emf.note_types
insert INTO emf.note_types VALUES (DEFAULT, 'Problem');
insert INTO emf.note_types VALUES (DEFAULT, 'Observation');
insert INTO emf.note_types VALUES (DEFAULT, 'Question');
insert INTO emf.note_types VALUES (DEFAULT, 'Answer');
insert INTO emf.note_types VALUES (DEFAULT, 'Resolution');
insert INTO emf.note_types VALUES (DEFAULT, 'Replaced by dataset');
insert INTO emf.note_types VALUES (DEFAULT, 'Replaces dataset ');
insert INTO emf.note_types VALUES (DEFAULT, 'Explanation');
insert INTO emf.note_types VALUES (DEFAULT, 'Reference');
-- emf.note_types
--
-- emf.keywords
insert INTO emf.keywords VALUES (DEFAULT, 'EXPORT_HEADER_COMMENTS');
insert INTO emf.keywords VALUES (DEFAULT, 'EXPORT_INLINE_COMMENTS');
insert INTO emf.keywords VALUES (DEFAULT, 'HEADER_COMMENT_CHAR');
insert INTO emf.keywords VALUES (DEFAULT, 'INLINE_COMMENT_CHAR');
insert INTO emf.keywords VALUES (DEFAULT, 'EXPORT_PREFIX');
insert INTO emf.keywords VALUES (DEFAULT, 'EXPORT_SUFFIX');
insert INTO emf.keywords VALUES (DEFAULT, 'REPLACES_DATASET');
insert INTO emf.keywords VALUES (DEFAULT, 'REPLACED_BY_DATASET');
insert INTO emf.keywords VALUES (DEFAULT, 'EXPORT_COLUMN_LABEL');
insert INTO emf.keywords VALUES (DEFAULT, 'COLUMN_TYPES');
insert INTO emf.keywords VALUES (DEFAULT, 'PREVIOUS_LOCATION');
insert INTO emf.keywords VALUES (DEFAULT, 'MASS_STORAGE_LOCATION');
-- CoST Related
insert INTO emf.keywords VALUES (DEFAULT, 'SECTORS');
insert INTO emf.keywords VALUES (DEFAULT, 'COST_YEAR');
insert INTO emf.keywords VALUES (DEFAULT, 'STRATEGY_TYPE');
insert INTO emf.keywords VALUES (DEFAULT, 'TARGET_POLLUTANT');
insert INTO emf.keywords VALUES (DEFAULT, 'REGION');
insert INTO emf.keywords VALUES (DEFAULT, 'STRATEGY_NAME');
insert INTO emf.keywords VALUES (DEFAULT, 'STRATEGY_ID');
insert INTO emf.keywords VALUES (DEFAULT, 'STRATEGY_INVENTORY_NAME');
insert INTO emf.keywords VALUES (DEFAULT, 'STRATEGY_INVENTORY_VERSION');
insert INTO emf.keywords VALUES (DEFAULT, 'MEASURES_INCLUDED');
insert INTO emf.keywords VALUES (DEFAULT, 'DISCOUNT_RATE');
insert INTO emf.keywords VALUES (DEFAULT, 'USE_COST_EQUATION');
insert INTO emf.keywords VALUES (DEFAULT, 'MEASURE_CLASSES');
insert INTO emf.keywords VALUES (DEFAULT, 'TOTAL_ANNUAL_COST');
insert INTO emf.keywords VALUES (DEFAULT, 'AVERAGE_ANNUAL_COST_PER_TON');
insert INTO emf.keywords VALUES (DEFAULT, 'TOTAL_ANNUAL_OPERATION_MAINTENANCE_COST');
insert INTO emf.keywords VALUES (DEFAULT, 'TOTAL_ANNUALIZED_CAPITAL_COST');
insert INTO emf.keywords VALUES (DEFAULT, 'TOTAL_CAPITAL_COST');
insert INTO emf.keywords VALUES (DEFAULT, 'TARGET_PERCENT_REDUCTION');
insert INTO emf.keywords VALUES (DEFAULT, 'ACTUAL_PERCENT_REDUCTION');
insert INTO emf.keywords VALUES (DEFAULT, 'TOTAL_EMISSION_REDUCTION');
insert INTO emf.keywords VALUES (DEFAULT, 'UNCONTROLLED_EMISSION');
insert INTO emf.keywords VALUES (DEFAULT, 'INCLUDE_UNSPECIFIED_COSTS');
-- CoST Related
-- emf.keywords
--

-- emf.dataset_type_keywords
insert into emf.dataset_types_keywords (dataset_type_id, list_index, keyword_id, "value")
select id as dataset_type_id,
  (select COALESCE(max(list_index) + 1, 0) from emf.dataset_types_qa_step_templates where dataset_type_id = dt.id) as list_index,
  (select id from emf.keywords where "name" = 'COLUMN_TYPES') as keyword_id,
  'varchar(6)|varchar(15)|varchar(15)|varchar(15)|varchar(15)|varchar(40)|varchar(10)|varchar(255)' as "value"
from emf.dataset_types dt
where name in ('Plant Closure (CSV)');
insert into emf.dataset_types_keywords (dataset_type_id, list_index, keyword_id, "value")
select id as dataset_type_id,
  (select COALESCE(max(list_index) + 1, 0) from emf.dataset_types_qa_step_templates where dataset_type_id = dt.id) as list_index,
  (select id from emf.keywords where "name" = 'COLUMN_TYPES') as keyword_id,
  'varchar(6)|varchar(10)|float|varchar(20)|varchar(255)' as "value"
from emf.dataset_types dt
where name in ('Abbreviated Projection (CSV)');
insert into emf.dataset_types_keywords (dataset_type_id, list_index, keyword_id, "value")
select id as dataset_type_id,
  (select COALESCE(max(list_index) + 1, 0) from emf.dataset_types_qa_step_templates where dataset_type_id = dt.id) as list_index,
  (select id from emf.keywords where "name" = 'COLUMN_TYPES') as keyword_id,
  'varchar(6)|varchar(15)|varchar(15)|varchar(15)|varchar(15)|varchar(40)|varchar(10)|varchar(255)' as "value"
from emf.dataset_types dt
where name in ('Extended Projection (CSV)');
insert into emf.dataset_types_keywords (dataset_type_id, list_index, keyword_id, "value")
select id as dataset_type_id,
  (select COALESCE(max(list_index) + 1, 0) from emf.dataset_types_qa_step_templates where dataset_type_id = dt.id) as list_index,
  (select id from emf.keywords where "name" = 'COLUMN_TYPES') as keyword_id,
  'varchar(64)|varchar(32)|varchar(32)|float8(17)' as "value"
from emf.dataset_types dt
where name in ('Smkmerge report state annual summary (CSV)');
insert into emf.dataset_types_keywords (dataset_type_id, list_index, keyword_id, "value")
select id as dataset_type_id,
  (select COALESCE(max(list_index) + 1, 0) from emf.dataset_types_qa_step_templates where dataset_type_id = dt.id) as list_index,
  (select id from emf.keywords where "name" = 'COLUMN_TYPES') as keyword_id,
  'varchar(100)|varchar(255)|float8(17)' as "value"
from emf.dataset_types dt
where name in ('State Comparion Tolerance (CSV)');
-- emf.dataset_type_keywords

-- emf.qa_programs
insert into emf.qa_programs values(DEFAULT,'SQL','gov.epa.emissions.framework.services.qa.SQLQAProgramRunner');
insert into emf.qa_programs values(DEFAULT,'Smkreport','');
insert into emf.qa_programs values(DEFAULT,'Manual','');
insert into emf.qa_programs values(DEFAULT,'Analysis Engine','');
insert into emf.qa_programs values(DEFAULT,'Average Day to Annual Summary','gov.epa.emissions.framework.services.qa.SQLAnnualQueryRunner');
insert into emf.qa_programs values(DEFAULT,'Average day to Annual Inventory','gov.epa.emissions.framework.services.qa.SQLQAAnnualNonsummaryQueryRunner');
insert into emf.qa_programs values(DEFAULT,'Fire Data Summary (Day-specific)','gov.epa.emissions.framework.services.qa.FireProgramRunner');
insert into emf.qa_programs values(DEFAULT,'Multi-inventory sum','gov.epa.emissions.framework.services.qa.MultiInvSumProgramRunner');
insert into emf.qa_programs values(DEFAULT,'Multi-inventory column report','gov.epa.emissions.framework.services.qa.NInvDiffProgramRunner');
insert into emf.qa_programs values(DEFAULT,'Multi-inventory difference report','gov.epa.emissions.framework.services.qa.MultiInvDiffProgramRunner');
insert into emf.qa_programs values(DEFAULT,'Compare Control Strategies','gov.epa.emissions.framework.services.qa.SQLQACompareControlStrategiesQueryRunner');
insert into emf.qa_programs values(DEFAULT,'Compare VOC Speciation with HAP inventory','gov.epa.emissions.framework.services.qa.SQLQACompareVOCSpeciationWithHAPInventoryQueryRunner');
insert into emf.qa_programs values(DEFAULT,'Create monthly emissions by county from annual emissions','gov.epa.emissions.framework.services.qa.SQLQACreateMoEmisByCtyFromAnnEmisQueryRunner');
insert into emf.qa_programs values(DEFAULT,'Compare annual state summaries','gov.epa.emissions.framework.services.qa.SQLQACompareAnnualStateSummariesQueryRunner');
insert into emf.qa_programs values(DEFAULT,'SMOKE output annual state summaries crosstab','gov.epa.emissions.framework.services.qa.SQLQAAnnualStateSummariesCrosstabQueryRunner');

--7/23/2009 Region Types
insert into emf.region_type values (1, 'Name only', 'A region described only with a name');
insert into emf.region_type values (2, 'I/O API Regular Grid', 'A grid as described by the I/O API with a lower left corner, number of cells in x and y, and cell size in x and y.');
insert into emf.region_type values (3, 'List of Counties', 'The region refers to a dataset that provides a list of counties that describe the region');
insert into emf.region_type values (4, 'Shapefile','The region is described by a dataset that represents a Shapefile');

