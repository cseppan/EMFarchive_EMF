-- -------------CoST Tables--------------
-- emf.pollutants
CREATE TABLE emf.pollutants
(
  id SERIAL PRIMARY KEY,
  name varchar(255) UNIQUE NOT NULL,
  description text,
  lock_owner varchar(64),
  lock_date timestamp
) 
WITHOUT OIDS;
CREATE INDEX pollutant_id
  ON emf.pollutants
  USING btree
  (id);
-- emf.pollutants
--
-- emf.source_groups
CREATE TABLE emf.source_groups
(
  id SERIAL PRIMARY KEY,
  name varchar(255) UNIQUE NOT NULL,
  description text,
  lock_owner varchar(64),
  lock_date timestamp
) 
WITHOUT OIDS;
-- emf.source_groups
--

-- emf.control_measure_classes
CREATE TABLE emf.control_measure_classes
(
  id SERIAL PRIMARY KEY,
  name varchar(64) NOT NULL UNIQUE,
  description varchar(255)
) 
WITHOUT OIDS;
-- emf.control_measure_classes

-- emf control_technologies
CREATE TABLE emf.control_technologies
(
  id SERIAL PRIMARY KEY,
  name varchar(128) UNIQUE NOT NULL,
  description text,
  lock_owner varchar(64),
  lock_date timestamp
) 
WITHOUT OIDS;
-- emf control_technologies

-- emf.control_measures
CREATE TABLE emf.control_measures
(
  id SERIAL PRIMARY KEY,
  name varchar(255) NOT NULL UNIQUE,
  abbreviation varchar(10) NOT NULL UNIQUE,
  cm_class_id int4 REFERENCES emf.control_measure_classes(id),
  description text,
  device_code int4,
  equipment_life real,
  major_pollutant int4 REFERENCES emf.pollutants(id),
  control_technology int4 REFERENCES emf.control_technologies(id),
  source_group int4 REFERENCES emf.source_groups(id),
  data_souce varchar(128),
  creator int4  REFERENCES emf.users(id),
  cost_year int4,
  last_modified_time timestamp,
  lock_owner varchar(64),
  lock_date timestamp,
  date_reviewed timestamp,
  last_modified_by varchar(255) NOT NULL
) 
WITHOUT OIDS;
CREATE INDEX measure_id
  ON emf.control_measures
  USING btree
  (id);
-- emf.control_measures


-- emf.control_measure_sccs
CREATE TABLE emf.control_measure_sccs
(
   id SERIAL PRIMARY KEY,
   control_measures_id  int4 NOT NULL REFERENCES emf.control_measures(id),
   name varchar(15),
   status varchar(255),
   UNIQUE(control_measures_id,name)
)
WITHOUT OIDS;
CREATE INDEX measure_scc_measure_id
  ON emf.control_measure_sccs
  USING btree
  (control_measures_id);
CREATE INDEX measure_scc_scc
  ON emf.control_measure_sccs
  USING btree
  (name);
-- emf.control_measure_sccs

-- emf.control_measure_efficiencyrecords
CREATE TABLE emf.control_measure_efficiencyrecords
(
  id SERIAL PRIMARY KEY,
  control_measures_id int4 NOT NULL REFERENCES emf.control_measures(id),
  list_index int4,
  record_id int4,
  pollutant_id int4 NOT NULL REFERENCES emf.pollutants(id),
  existing_measure_abbr varchar(10),
  existing_dev_code int4,
  locale varchar(10),
  efficiency real,
  percent_reduction real,
  cost_year int4,
  cost_per_ton real,
  rule_effectiveness real,
  rule_penetration real,
  equation_type varchar(128),
  cap_rec_factor real,
  discount_rate real,
  detail text,
  effective_date timestamp,
  last_modified_by varchar(255) NOT NULL,
  last_modified_time timestamp NOT NULL,
  ref_yr_cost_per_ton float4,
  min_emis double precision,
  max_emis double precision,
  Cap_Ann_Ratio double precision,
  Incremental_Cost_Per_Ton double precision,
  UNIQUE (control_measures_id,pollutant_id,locale,existing_measure_abbr,effective_date, min_emis, max_emis)
) 
WITHOUT OIDS;
CREATE INDEX er_measureid
  ON emf.control_measure_efficiencyrecords
  USING btree
  (control_measures_id);
CREATE INDEX er_pollutantid
  ON emf.control_measure_efficiencyrecords
  USING btree
  (pollutant_id);
  
-- emf.control_measure_efficiencyrecords

-- emf control_measurs_sectors
CREATE TABLE emf.control_measurs_sectors
(
  id SERIAL PRIMARY KEY,
  control_measure_id int4 NOT NULL REFERENCES emf.control_measures(id) ,
  list_index int4,
  sector_id int4 REFERENCES emf.sectors (id),
  UNIQUE (control_measure_id,sector_id) 
) 
WITHOUT OIDS;
-- emf control_measurs_sectors

-- emf.strategy_types
CREATE TABLE emf.strategy_types
(
  id SERIAL PRIMARY KEY,
  name varchar(255) NOT NULL UNIQUE,
  description text NOT NULL,
  default_sortorder text NULL DEFAULT '',
  strategy_classname varchar(255),
  lock_owner varchar(255),
  lock_date timestamp
) 
WITHOUT OIDS;
-- emf.strategy_types


-- emf.control_strategies
CREATE TABLE emf.control_strategies
(
  id SERIAL PRIMARY KEY,
  name varchar(255) NOT NULL UNIQUE,
  description text,
  run_status varchar(255),
  region_id int4 REFERENCES emf.regions(id),
  project_id int4 REFERENCES emf.projects (id),
  discount_rate real,
  total_cost real,
  reduction real,
  cost_year int4,
  analysis_year int4,
  creator_id int4 REFERENCES emf.users(id),
  last_modified_date timestamp,
  start_date timestamp,
  completion_date timestamp,
  strategy_type_id int4 REFERENCES emf.strategy_types(id),
  pollutant_id int4 REFERENCES emf.pollutants(id),
  filter varchar(255),
  lock_owner varchar(255),
  lock_date timestamp,
  county_file character varying,
  use_cost_equations boolean
) 
WITHOUT OIDS;
-- emf.control_strategies

-- emf.control_strategy_classes
CREATE TABLE emf.control_strategy_classes
(
  id SERIAL PRIMARY KEY,
  control_strategy_id int4 NOT NULL REFERENCES emf.control_strategies(id) ,
  control_measure_class_id int4 REFERENCES emf.control_measure_classes (id),
  list_index int4,
  UNIQUE (control_strategy_id,control_measure_class_id) 
) 
WITHOUT OIDS;
-- emf.control_strategy_classes

-- emf.control_strategy_measures
CREATE TABLE emf.control_strategy_measures
(
  id SERIAL PRIMARY KEY,
  control_strategy_id int4 NOT NULL REFERENCES emf.control_strategies(id) ,
  control_measure_id int4 NOT NULL REFERENCES emf.control_measures (id),
  list_index int4 NOT NULL,
  include bool NOT NULL DEFAULT true,
  rule_effectiveness double precision,
  rule_penetration double precision,
  apply_order double precision,
  UNIQUE (control_strategy_id,control_measure_id) 
) 
WITHOUT OIDS;
-- emf.control_strategy_measures

-- emf.input_datasets_control_strategies
CREATE TABLE emf.input_datasets_control_strategies
(
  id SERIAL PRIMARY KEY,
  control_strategy_id int4 NOT NULL REFERENCES emf.control_strategies(id),
  list_index int4,
  dataset_id int4 REFERENCES emf.datasets (id),
  dataset_version integer
) 
WITHOUT OIDS;
-- emf.datasets_control_strategies

-- emf.strategy_result_types
CREATE TABLE emf.strategy_result_types
(
  id SERIAL PRIMARY KEY,
  name varchar(255) NOT NULL UNIQUE
) 
WITHOUT OIDS;
-- emf.strategy_result_types

-- emf.strategy_results
CREATE TABLE emf.strategy_results
(
  id SERIAL PRIMARY KEY,
  control_strategy_id int4 NOT NULL REFERENCES emf.control_strategies(id),
  dataset_id int4 NOT NULL REFERENCES emf.datasets(id),
  strategy_result_type_id int4 NOT NULL REFERENCES emf.strategy_result_types(id),
  detailed_result_dataset_id int4 NOT NULL REFERENCES emf.datasets(id),
  controlled_inven_dataset_id int4 REFERENCES emf.datasets(id),
  list_index int4,
  total_cost real,
  total_reduction real,
  start_time timestamp,
  completion_time timestamp,
  run_status VARCHAR(255),
  record_count integer,
  UNIQUE (control_strategy_id,dataset_id,detailed_result_dataset_id)
) 
WITHOUT OIDS;
-- emf.strategy_results

-- emf.aggregrated_efficiencyrecords
CREATE TABLE emf.aggregrated_efficiencyrecords
(
  control_measures_id integer NOT NULL,
  pollutant_id integer NOT NULL,
  max_efficiency real,
  min_efficiency real,
  avg_efficiency real,
  max_cost_per_ton real,
  min_cost_per_ton real,
  avg_cost_per_ton real,
  avg_rule_effectiveness real,
  avg_rule_penetration real,
  CONSTRAINT aggregrated_efficiencyrecords_pkey PRIMARY KEY (control_measures_id,pollutant_id),
  CONSTRAINT aggregrated_efficiencyrecords_control_measures_id_fkey FOREIGN KEY (control_measures_id)
      REFERENCES emf.control_measures (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT aggregrated_efficiencyrecords_pollutant_id_fkey FOREIGN KEY (pollutant_id)
      REFERENCES emf.pollutants (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
) 
WITHOUT OIDS;
CREATE INDEX aggeffrec_measureid
  ON emf.aggregrated_efficiencyrecords
  USING btree
  (control_measures_id);
CREATE INDEX aggeffrec_pollid
  ON emf.aggregrated_efficiencyrecords
  USING btree
  (pollutant_id);

-- add new table control_strategy_constraints...
CREATE TABLE emf.control_strategy_constraints
(
  control_strategy_id integer NOT NULL,
  max_emis_reduction real,
  max_control_efficiency real,
  min_cost_per_ton real,
  min_ann_cost real,
  CONSTRAINT control_strategy_constraints_pkey PRIMARY KEY (control_strategy_id),
  CONSTRAINT control_strategy_constraints_control_strategy_id_fkey FOREIGN KEY (control_strategy_id)
      REFERENCES emf.control_strategies (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
) 
WITHOUT OIDS;

CREATE INDEX constraint_strategy_id
  ON emf.control_strategy_constraints
  USING btree
  (control_strategy_id);
