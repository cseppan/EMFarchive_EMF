-- emf.control_measure_classes
CREATE TABLE emf.control_measure_classes
(
  id SERIAL PRIMARY KEY,
  name varchar(64) NOT NULL UNIQUE,
  description varchar(255)
) 
WITHOUT OIDS;
-- emf.control_measure_classes

--Populate emf.control_measure_classes
insert into emf.control_measure_classes values (DEFAULT, 'Known', 'Known');
insert into emf.control_measure_classes values (DEFAULT, 'Emerging', 'Emerging');
insert into emf.control_measure_classes values (DEFAULT, 'Hypothetical', 'Hypothetical');
insert into emf.control_measure_classes values (DEFAULT, 'Obselete', 'Obselete');
--Populate emf.control_measure_classes

-- Add new control measure class id to control_measures table..
ALTER TABLE emf.control_measures ADD COLUMN cm_class_id int4 REFERENCES emf.control_measure_classes(id);
-- Add new control measure class id to control_measures table..

-- update new cm_class_id based on current cm_class string setting...
update emf.control_measures
set cm_class_id = emf.control_measure_classes.id
from emf.control_measure_classes
where emf.control_measure_classes.name = emf.control_measures.cm_class;
-- update new cm_class_id based on current cm_class string setting...

-- get rid of cm_class column on control_measures...
ALTER TABLE emf.control_measures DROP COLUMN cm_class;
-- get rid of cm_class column on control_measures...

-- Create new emf.control_strategy_classes table...
CREATE TABLE emf.control_strategy_classes
(
  id SERIAL PRIMARY KEY,
  control_strategy_id int4 NOT NULL REFERENCES emf.control_strategies(id) ,
  control_measure_class_id int4 REFERENCES emf.control_measure_classes (id),
  list_index int4,
  UNIQUE (control_strategy_id,control_measure_class_id) 
) 
WITHOUT OIDS;
-- Create new emf.control_strategy_classes table...

-- Create new emf.control_strategy_measures
CREATE TABLE emf.control_strategy_measures
(
  id SERIAL PRIMARY KEY,
  control_strategy_id int4 NOT NULL REFERENCES emf.control_strategies(id) ,
  control_measure_id int4 NOT NULL REFERENCES emf.control_measures (id),
  list_index int4 NOT NULL,
  include bool NOT NULL DEFAULT true,
  UNIQUE (control_strategy_id,control_measure_id) 
) 
WITHOUT OIDS;
-- Create new emf.control_strategy_measures

-- add new columns to the efficiencyrecords table...
ALTER TABLE emf.control_measure_efficiencyrecords ADD COLUMN last_modified_by varchar(255) NOT NULL DEFAULT '',
  ADD COLUMN last_modified_time timestamp NOT NULL DEFAULT now();
  
-- add new columns to the controlmeasures table...
ALTER TABLE emf.control_measures ADD COLUMN last_modified_by varchar(255) NOT NULL DEFAULT '';

-- add new columns to the efficiencyrecords table...
ALTER TABLE emf.control_measure_efficiencyrecords ADD COLUMN ref_yr_cost_per_ton float4 DEFAULT 0;
ALTER TABLE emf.control_measure_efficiencyrecords ALTER COLUMN ref_yr_cost_per_ton DROP DEFAULT;

-- update the ref_yr_cost_per_ton based on the year 1999
update emf.control_measure_efficiencyrecords 
set ref_yr_cost_per_ton = cost_per_ton * 9470.3 / CAST(chained_gdp as float)
from reference.gdplev
where control_measure_efficiencyrecords.cost_year = gdplev.annual;

-- add indexes to various emf tables...
CREATE INDEX er_measureid
  ON emf.control_measure_efficiencyrecords
  USING btree
  (control_measures_id);
CREATE INDEX er_pollutantid
  ON emf.control_measure_efficiencyrecords
  USING btree
  (pollutant_id);
CREATE INDEX measure_id
  ON emf.control_measures
  USING btree
  (id);
CREATE INDEX pollutant_id
  ON emf.pollutants
  USING btree
  (id);



CREATE TABLE emf.aggregrated_efficiencyrecords
(
  control_measures_id integer NOT NULL,
  pollutant_id integer NOT NULL,
  max_efficiency real,
  min_efficiency real,
  avg_efficiency real,
  max_cost_per_ton real,
  min_cost_per_ton real,
  avg_cost_per_ton real,
  avg_rule_effectiveness real,
  avg_rule_penetration real,
  CONSTRAINT aggregrated_efficiencyrecords_pkey PRIMARY KEY (control_measures_id,pollutant_id),
  CONSTRAINT aggregrated_efficiencyrecords_control_measures_id_fkey FOREIGN KEY (control_measures_id)
      REFERENCES emf.control_measures (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT aggregrated_efficiencyrecords_pollutant_id_fkey FOREIGN KEY (pollutant_id)
      REFERENCES emf.pollutants (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);
 
CREATE INDEX aggeffrec_measureid
  ON emf.aggregrated_efficiencyrecords
  USING btree
  (control_measures_id);
CREATE INDEX aggeffrec_pollid
  ON emf.aggregrated_efficiencyrecords
  USING btree
  (pollutant_id);

insert into emf.aggregrated_efficiencyrecords (
  control_measures_id,
  pollutant_id,
  max_efficiency,
  min_efficiency,
  avg_efficiency,
  max_cost_per_ton,
  min_cost_per_ton,
  avg_cost_per_ton,
  avg_rule_effectiveness,
  avg_rule_penetration)
select  control_measures_id, pollutant_id, max(efficiency) as maxefficiency, min(efficiency) as minefficiency, 
	avg(efficiency) as avgefficiency, max(cost_per_ton) as maxcpt, 
	min(cost_per_ton) as mincpt, avg(cost_per_ton) as avgcpt, 
	avg(rule_effectiveness) as avgruleff, avg(rule_penetration) as avgrulpen 
from emf.control_measure_efficiencyrecords 
group by control_measures_id, pollutant_id;

-- add new table control_strategy_constraints...
CREATE TABLE emf.control_strategy_constraints
(
  control_strategy_id integer NOT NULL,
  max_emis_reduction real,
  max_control_efficiency real,
  min_cost_per_ton real,
  min_ann_cost real,
  CONSTRAINT control_strategy_constraints_pkey PRIMARY KEY (control_strategy_id),
  CONSTRAINT control_strategy_constraints_control_strategy_id_fkey FOREIGN KEY (control_strategy_id)
      REFERENCES emf.control_strategies (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
) 
WITHOUT OIDS;

CREATE INDEX constraint_strategy_id
  ON emf.control_strategy_constraints
  USING btree
  (control_strategy_id);
  
-- Added 6/1/12007 NEW MIN MAX Emis constraints for eff recs.
-- add new columns, min and max emis to the efficiencyrecords table...
ALTER TABLE emf.control_measure_efficiencyrecords 
	ADD COLUMN min_emis double precision,
	ADD COLUMN max_emis double precision;

 -- modify constraint to include min and max emis columns...
ALTER TABLE emf.control_measure_efficiencyrecords DROP CONSTRAINT control_measure_efficiencyrecords_control_measures_id_key;
ALTER TABLE emf.control_measure_efficiencyrecords ADD CONSTRAINT control_measure_efficiencyrecords_control_measures_id_key 
UNIQUE (control_measures_id, pollutant_id, locale, existing_measure_abbr, effective_date, min_emis, max_emis);

 -- modify details data type to be a text field instead of varchar(128)...
ALTER TABLE emf.control_measure_efficiencyrecords ALTER detail TYPE text;

-- 7/9/2007 - Added new strategy type
insert into emf.strategy_types (name, description, default_sortorder, strategy_classname)
values ('Apply Measures In Series', 'Apply Measures In Series', '''''', 'gov.epa.emissions.framework.services.cost.analysis.applyMeasuresInSeries.StrategyTask');

-- Added 7/18/12007 NEW RP, RE and ApplyOrder columns control strategy measure table.
ALTER TABLE emf.control_strategy_measures 
	ADD COLUMN rule_effectiveness double precision DEFAULT 100,
	ADD COLUMN rule_penetration double precision DEFAULT 100,
	ADD COLUMN apply_order double precision DEFAULT 1;

-- Added 7/27/12007 NEW version column
ALTER TABLE emf.input_datasets_control_strategies
	ADD COLUMN dataset_version integer DEFAULT 0;

ALTER TABLE emf.control_strategies
	DROP COLUMN dataset_type_id,
	DROP COLUMN dataset_version;
	
ALTER TABLE emf.strategy_results
	ADD COLUMN record_count integer;

	
