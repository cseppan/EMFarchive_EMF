-------------------------------------------------------------------------------
--  CASE MANAGEMENT
-------------------------------------------------------------------------------

-- cases.case_abbreviations
CREATE TABLE cases.case_abbreviations
(
  id SERIAL PRIMARY KEY,
  name varchar(255) NOT NULL UNIQUE
) 
WITHOUT OIDS;
-- cases.case_abbreviations

-- cases.case_categories
CREATE TABLE cases.case_categories
(
  id SERIAL PRIMARY KEY,
  name varchar(255) NOT NULL UNIQUE
) 
WITHOUT OIDS;
-- cases.case_categories

-- cases.air_quality_models
CREATE TABLE cases.air_quality_models
(
  id SERIAL PRIMARY KEY,
  name varchar(255) NOT NULL UNIQUE
) 
WITHOUT OIDS;
-- cases.air_quality_models

-- cases.grids
CREATE TABLE cases.grids
(
  id SERIAL PRIMARY KEY,
  name varchar(255) NOT NULL UNIQUE
) 
WITHOUT OIDS;
-- cases.grids

-- cases.grid_resolutions
CREATE TABLE cases.grid_resolutions
(
  id SERIAL PRIMARY KEY,
  name varchar(128) NOT NULL UNIQUE
) 
WITHOUT OIDS;
-- cases.grid_resolutions

-- cases.speciations
CREATE TABLE cases.speciations
(
  id SERIAL PRIMARY KEY,
  name varchar(255) NOT NULL UNIQUE
) 
WITHOUT OIDS;
-- cases.speciations

-- cases.programs
CREATE TABLE cases.programs
(
  id SERIAL PRIMARY KEY,
  name varchar(255) NOT NULL UNIQUE
) 
WITHOUT OIDS;
-- cases.programs

-- cases.inputnames
CREATE TABLE cases.inputnames
(
  id SERIAL PRIMARY KEY,
  name varchar(255) NOT NULL UNIQUE
) 
WITHOUT OIDS;
-- cases.inputnames

-- cases.input_envt_vars
CREATE TABLE cases.input_envt_vars
(
  id SERIAL PRIMARY KEY,
  name varchar(255) NOT NULL UNIQUE
) 
WITHOUT OIDS;
-- cases.input_envt_vars

-- cases.meteorlogical_years
CREATE TABLE cases.meteorlogical_years
(
  id SERIAL PRIMARY KEY,
  name varchar(255) NOT NULL UNIQUE
) 
WITHOUT OIDS;
-- cases.meteorlogical_years

-- cases.emissions_years
CREATE TABLE cases.emissions_years
(
  id SERIAL PRIMARY KEY,
  name varchar(255) NOT NULL UNIQUE
) 
WITHOUT OIDS;
-- cases.emissions_years

-- cases.case_inputs
CREATE TABLE cases.case_inputs
(
  id SERIAL PRIMARY KEY,
  name varchar(128),
  sub_dir varchar(255),
  required bool DEFAULT false,
  show bool DEFAULT false,
  sector_id int4  REFERENCES emf.sectors(id),
  program_id int4  REFERENCES cases.programs(id),
  envt_vars_id int4  REFERENCES cases.input_envt_vars(id),
  input_name_id int4  REFERENCES cases.inputnames(id),
  dataset_id int4  REFERENCES emf.datasets(id),
  version_id int4  REFERENCES emissions.versions(id),
  dataset_type_id int4  REFERENCES emf.dataset_types(id),
  UNIQUE (input_name_id, sector_id, program_id)
) 
WITHOUT OIDS;
-- cases.case_inputs

-- cases.cases
CREATE TABLE cases.cases
(
  id SERIAL PRIMARY KEY,
  name varchar(128) NOT NULL UNIQUE,
  abbreviation_id int4 REFERENCES cases.case_abbreviations(id),
  description text,
  user_id int4  REFERENCES emf.users(id),
  air_quality_model_id int4  REFERENCES cases.air_quality_models(id),
  category_id int4  REFERENCES cases.case_categories(id),
  project_id int4  REFERENCES emf.projects(id),
  modeling_region_id int4  REFERENCES emf.regions(id),
  control_region_id int4  REFERENCES emf.regions(id),
  run_status varchar(128),
  input_file_dir varchar(255),
  output_file_dir varchar(255),
  case_template bool DEFAULT false,
  is_final bool DEFAULT false,
  template_used varchar(128),
  grid_id int4 REFERENCES cases.grids(id),
  grid_resolution_id int4 REFERENCES cases.grid_resolutions(id),
  speciation_id int4 REFERENCES cases.speciations(id),
  meteorlogical_year_id int4 REFERENCES cases.meteorlogical_years(id),
  emissions_year_id int4 REFERENCES cases.emissions_years(id),
  num_met_layers int4 DEFAULT 0,
  num_emissions_layers int4 DEFAULT 0,
  base_year int4 DEFAULT 0,
  future_year int4 DEFAULT 0,
  last_modified_date timestamp,
  lock_owner varchar(64),
  lock_date timestamp,
  start_date timestamp,
  end_date timestamp
) 
WITHOUT OIDS;
-- cases.cases

-- cases.case_sectors
CREATE TABLE cases.case_sectors
(
  id SERIAL PRIMARY KEY,
  case_id int4 NOT NULL REFERENCES cases.cases(id) ,
  list_index int4,
  sector_id int4 REFERENCES emf.sectors(id),
  UNIQUE (case_id,sector_id) 
) 
WITHOUT OIDS;
-- cases.case_sectors

-- cases.cases_caseinputs
CREATE TABLE cases.cases_caseinputs
(
  id SERIAL PRIMARY KEY,
  case_id int4 NOT NULL REFERENCES cases.cases(id) ,
  list_index int4,
  caseinputs_id int4 REFERENCES cases.case_inputs(id),
  UNIQUE (case_id,caseinputs_id) 
) 
WITHOUT OIDS;
-- cases.cases_caseinputs
