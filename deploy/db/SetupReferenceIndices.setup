DROP TABLE reference.pollutants;

ALTER TABLE reference.gdplev ADD CONSTRAINT gdplev_pkey PRIMARY KEY (annual);
ALTER TABLE reference.fips ADD CONSTRAINT fips_pkey PRIMARY KEY (costcy_fips);
ALTER TABLE reference.mact_codes ADD CONSTRAINT mact_pkey PRIMARY KEY (mact_code);
ALTER TABLE reference.naics_codes ADD CONSTRAINT naics_pkey PRIMARY KEY (naics_code);
ALTER TABLE reference.countries ADD CONSTRAINT countries_pk PRIMARY KEY (country_code);
ALTER TABLE reference.pollutant_codes ADD CONSTRAINT pollutant_codes_pkey PRIMARY KEY (pollutant_code);
ALTER TABLE reference.states ADD CONSTRAINT states_pkey PRIMARY KEY (country_code, state_abbr);
ALTER TABLE reference.scc ADD CONSTRAINT scc_pkey PRIMARY KEY (scc);
ALTER TABLE reference.scc_codes ADD CONSTRAINT scc_codes_pkey PRIMARY KEY (scc);
ALTER TABLE reference.sic_codes ADD CONSTRAINT sic_pkey PRIMARY KEY (sic);
ALTER TABLE reference.state_county_fips_codes ADD CONSTRAINT state_county_fips_pkey PRIMARY KEY (state_county_fips_code);

CREATE INDEX countries_abbr
  ON reference.countries
  USING btree
  (country_code, country_abbr);

CREATE INDEX gdplev_annual
  ON reference.gdplev
  USING btree
  (annual);
ALTER TABLE reference.gdplev CLUSTER ON gdplev_annual;

CREATE INDEX fips_co_st
  ON reference.fips
  USING btree
  (country_code, state_county_fips);

CREATE INDEX fips_conum_st
  ON reference.fips
  USING btree
  (country_num, state_county_fips);
   
-- DROP INDEX reference.fips_pk;
    
CREATE INDEX pollutant_codes_tonames
  ON reference.pollutant_codes
  USING btree
  (pollutant_code, pollutant_code_desc);

-- some day, merge SCC and SCC-codes
-- also, merge FIPS with state_county_fips_codes

-- null out applicable pollutant_code values...
update reference.pollutant_codes
set molecular_weight = case when molecular_weight = '' then null else molecular_weight end,
	spec4id = case when spec4id = '' then null else spec4id end,
	nato_teq = case when nato_teq = '' then null else nato_teq end,
	who_teq = case when who_teq = '' then null else who_teq end,
	i_teq = case when i_teq = '' then null else i_teq end,
	pollutant_rank = case when pollutant_rank = '' then null else pollutant_rank end,
	factor = case when factor = '' then null else factor end;

-- null out applicable invtable values...
update reference.invtable
set factor = case when factor = '' then null else factor end;

CREATE INDEX invtable_names
  ON reference.invtable
  USING btree
  (name);
CREATE INDEX invtable_cas
  ON reference.invtable
  USING btree
  (cas);
  